//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Asv.Mavlink {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class RS {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal RS() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Asv.Mavlink.RS", typeof(RS).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Holds attitude, no self-level.
        /// </summary>
        public static string ArdupilotCopterMode_Acro_Description {
            get {
                return ResourceManager.GetString("ArdupilotCopterMode_Acro_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Holds altitude and self-levels the roll &amp; pitch.
        /// </summary>
        public static string ArdupilotCopterMode_AltHold_Description {
            get {
                return ResourceManager.GetString("ArdupilotCopterMode_AltHold_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executes pre-defined mission.
        /// </summary>
        public static string ArdupilotCopterMode_Auto_Description {
            get {
                return ResourceManager.GetString("ArdupilotCopterMode_Auto_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automated pitch and bank procedure to improve control loops.
        /// </summary>
        public static string ArdupilotCopterMode_AutoTune_Description {
            get {
                return ResourceManager.GetString("ArdupilotCopterMode_AutoTune_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ADS-B based avoidance of manned aircraft. Should not be set-up as a pilot selectable flight mode..
        /// </summary>
        public static string ArdupilotCopterMode_AvoidAdsb_Description {
            get {
                return ResourceManager.GetString("ArdupilotCopterMode_AvoidAdsb_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Brings copter to an immediate stop.
        /// </summary>
        public static string ArdupilotCopterMode_Brake_Description {
            get {
                return ResourceManager.GetString("ArdupilotCopterMode_Brake_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically circles a point in front of the vehicle.
        /// </summary>
        public static string ArdupilotCopterMode_Circle_Description {
            get {
                return ResourceManager.GetString("ArdupilotCopterMode_Circle_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Like stabilize, but coordinates yaw with roll like a plane.
        /// </summary>
        public static string ArdupilotCopterMode_Drift_Description {
            get {
                return ResourceManager.GetString("ArdupilotCopterMode_Drift_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rises and completes an automated flip.
        /// </summary>
        public static string ArdupilotCopterMode_Flip_Description {
            get {
                return ResourceManager.GetString("ArdupilotCopterMode_Flip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Navigates to single points commanded by GCS.
        /// </summary>
        public static string ArdupilotCopterMode_Guided_Description {
            get {
                return ResourceManager.GetString("ArdupilotCopterMode_Guided_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Same as Guided, but uses only attitude targets for navigation.
        /// </summary>
        public static string ArdupilotCopterMode_GuidedNoGps_Description {
            get {
                return ResourceManager.GetString("ArdupilotCopterMode_GuidedNoGps_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reduces altitude to ground level, attempts to go straight down.
        /// </summary>
        public static string ArdupilotCopterMode_Land_Description {
            get {
                return ResourceManager.GetString("ArdupilotCopterMode_Land_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Holds altitude and position, uses GPS for movements.
        /// </summary>
        public static string ArdupilotCopterMode_Loiter_Description {
            get {
                return ResourceManager.GetString("ArdupilotCopterMode_Loiter_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Like loiter, but manual roll and pitch when sticks not centered.
        /// </summary>
        public static string ArdupilotCopterMode_PosHold_Description {
            get {
                return ResourceManager.GetString("ArdupilotCopterMode_PosHold_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returns above takeoff location, may also include landing.
        /// </summary>
        public static string ArdupilotCopterMode_Rtl_Description {
            get {
                return ResourceManager.GetString("ArdupilotCopterMode_Rtl_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RTL, but traces path to get home.
        /// </summary>
        public static string ArdupilotCopterMode_SmartRtl_Description {
            get {
                return ResourceManager.GetString("ArdupilotCopterMode_SmartRtl_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alt-hold, but holds pitch &amp; roll when sticks centered.
        /// </summary>
        public static string ArdupilotCopterMode_Sport_Description {
            get {
                return ResourceManager.GetString("ArdupilotCopterMode_Sport_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wing-leveling on stick release.
        /// </summary>
        public static string ArdupilotCopterMode_Stabilize_Description {
            get {
                return ResourceManager.GetString("ArdupilotCopterMode_Stabilize_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Holds position after a throwing takeoff.
        /// </summary>
        public static string ArdupilotCopterMode_Throw_Description {
            get {
                return ResourceManager.GetString("ArdupilotCopterMode_Throw_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rate controlled mode with no attitude limits.
        /// </summary>
        public static string ArdupilotPlaneMode_Acro_Description {
            get {
                return ResourceManager.GetString("ArdupilotPlaneMode_Acro_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Follows Mission.
        /// </summary>
        public static string ArdupilotPlaneMode_Auto_Description {
            get {
                return ResourceManager.GetString("ArdupilotPlaneMode_Auto_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Like FBWA, but learns attitude tuning while flying.
        /// </summary>
        public static string ArdupilotPlaneMode_Autotune_Description {
            get {
                return ResourceManager.GetString("ArdupilotPlaneMode_Autotune_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gently turns aircraft.
        /// </summary>
        public static string ArdupilotPlaneMode_Circle_Description {
            get {
                return ResourceManager.GetString("ArdupilotPlaneMode_Circle_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Like FBWB, but with ground course tracking and terrain following.
        /// </summary>
        public static string ArdupilotPlaneMode_Cruise_Description {
            get {
                return ResourceManager.GetString("ArdupilotPlaneMode_Cruise_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roll and pitch follow stick input, up to set limits.
        /// </summary>
        public static string ArdupilotPlaneMode_FlyByWireA_Description {
            get {
                return ResourceManager.GetString("ArdupilotPlaneMode_FlyByWireA_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Like FBWA, but with automatic height and speed control.
        /// </summary>
        public static string ArdupilotPlaneMode_FlyByWireB_Description {
            get {
                return ResourceManager.GetString("ArdupilotPlaneMode_FlyByWireB_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Circles user defined point from GCS.
        /// </summary>
        public static string ArdupilotPlaneMode_Guided_Description {
            get {
                return ResourceManager.GetString("ArdupilotPlaneMode_Guided_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Circles point where mode switched.
        /// </summary>
        public static string ArdupilotPlaneMode_Loiter_Description {
            get {
                return ResourceManager.GetString("ArdupilotPlaneMode_Loiter_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This mode will perform a descending fixed wing LOITER down to Q_RTL_ALT and then switch to QLAND mode..
        /// </summary>
        public static string ArdupilotPlaneMode_Loiter_To_QLand_Description {
            get {
                return ResourceManager.GetString("ArdupilotPlaneMode_Loiter_To_QLand_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manual control surface movement, passthrough.
        /// </summary>
        public static string ArdupilotPlaneMode_Manual_Description {
            get {
                return ResourceManager.GetString("ArdupilotPlaneMode_Manual_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A quadplane mode for advanced users that provides rate based stabilization like Copter ACRO.
        /// </summary>
        public static string ArdupilotPlaneMode_QAcro_Description {
            get {
                return ResourceManager.GetString("ArdupilotPlaneMode_QAcro_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automated pitch and bank procedure to improve control loops.
        /// </summary>
        public static string ArdupilotPlaneMode_Qautotune_Description {
            get {
                return ResourceManager.GetString("ArdupilotPlaneMode_Qautotune_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to QuadPlane maintains a consistent altitude while allowing roll, pitch, and yaw to be controlled normally.
        /// </summary>
        public static string ArdupilotPlaneMode_Qhover_Description {
            get {
                return ResourceManager.GetString("ArdupilotPlaneMode_Qhover_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempts to bring the QuadPlane straight down at the position the vehicle is located when the mode is entered.
        /// </summary>
        public static string ArdupilotPlaneMode_Qland_Description {
            get {
                return ResourceManager.GetString("ArdupilotPlaneMode_Qland_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically attempts to maintain the current location, heading and altitude.
        /// </summary>
        public static string ArdupilotPlaneMode_Qloiter_Description {
            get {
                return ResourceManager.GetString("ArdupilotPlaneMode_Qloiter_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Navigates QuadPlane from its current position to hover above the home position and then land.
        /// </summary>
        public static string ArdupilotPlaneMode_Qrtl_Description {
            get {
                return ResourceManager.GetString("ArdupilotPlaneMode_Qrtl_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows you to fly your vehicle manually, but self-levels the roll and pitch axis.
        /// </summary>
        public static string ArdupilotPlaneMode_Qstabilize_Description {
            get {
                return ResourceManager.GetString("ArdupilotPlaneMode_Qstabilize_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returns to and circles home or rally point.
        /// </summary>
        public static string ArdupilotPlaneMode_Rtl_Description {
            get {
                return ResourceManager.GetString("ArdupilotPlaneMode_Rtl_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wing-leveling on stick release.
        /// </summary>
        public static string ArdupilotPlaneMode_Stabilize_Description {
            get {
                return ResourceManager.GetString("ArdupilotPlaneMode_Stabilize_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manual control up to roll and pitch limits.
        /// </summary>
        public static string ArdupilotPlaneMode_Training_Description {
            get {
                return ResourceManager.GetString("ArdupilotPlaneMode_Training_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do nothing for autopilot.
        /// </summary>
        public static string CommandClientHelper_AutopilotRebootShutdown_DoNothingForAutopilot_Description {
            get {
                return ResourceManager.GetString("CommandClientHelper_AutopilotRebootShutdown_DoNothingForAutopilot_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reboot autopilot.
        /// </summary>
        public static string CommandClientHelper_AutopilotRebootShutdown_RebootAutopilot_Description {
            get {
                return ResourceManager.GetString("CommandClientHelper_AutopilotRebootShutdown_RebootAutopilot_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reboot autopilot and keep it in the bootloader until upgraded.
        /// </summary>
        public static string CommandClientHelper_AutopilotRebootShutdown_RebootAutopilotAndKeepItInTheBootloaderUntilUpgraded_Description {
            get {
                return ResourceManager.GetString("CommandClientHelper_AutopilotRebootShutdown_RebootAutopilotAndKeepItInTheBootload" +
                        "erUntilUpgraded_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shutdown autopilot.
        /// </summary>
        public static string CommandClientHelper_AutopilotRebootShutdown_ShutdownAutopilot_Description {
            get {
                return ResourceManager.GetString("CommandClientHelper_AutopilotRebootShutdown_ShutdownAutopilot_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do nothing for onboard computer.
        /// </summary>
        public static string CommandClientHelper_CompanionRebootShutdown_DoNothingForOnboardComputer_Description {
            get {
                return ResourceManager.GetString("CommandClientHelper_CompanionRebootShutdown_DoNothingForOnboardComputer_Descripti" +
                        "on", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reboot onboard computer.
        /// </summary>
        public static string CommandClientHelper_CompanionRebootShutdown_RebootOnboardComputer_Description {
            get {
                return ResourceManager.GetString("CommandClientHelper_CompanionRebootShutdown_RebootOnboardComputer_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reboot onboard computer and keep it in the bootloader until upgraded.
        /// </summary>
        public static string CommandClientHelper_CompanionRebootShutdown_RebootOnboardComputerAndKeepItInTheBootloaderUntilUpgraded_Description {
            get {
                return ResourceManager.GetString("CommandClientHelper_CompanionRebootShutdown_RebootOnboardComputerAndKeepItInTheBo" +
                        "otloaderUntilUpgraded_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shutdown onboard computer.
        /// </summary>
        public static string CommandClientHelper_CompanionRebootShutdown_ShutdownOnboardComputer_Description {
            get {
                return ResourceManager.GetString("CommandClientHelper_CompanionRebootShutdown_ShutdownOnboardComputer_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown command.
        /// </summary>
        public static string CommandClientHelper_RebootShutdown_UnknownCommand_Description {
            get {
                return ResourceManager.GetString("CommandClientHelper_RebootShutdown_UnknownCommand_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error for deserialize mavlink V2 package with messageID {0}: {1}.
        /// </summary>
        public static string DecoderV2_TryDecodePacket_Error_for_deserialize_mavlink_V2 {
            get {
                return ResourceManager.GetString("DecoderV2_TryDecodePacket_Error_for_deserialize_mavlink_V2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At this confidence level, positional measurements are considered accurate enough to meet all but the most sensitive applications..
        /// </summary>
        public static string GpsInfoHelper_GetDescription_Excellent {
            get {
                return ResourceManager.GetString("GpsInfoHelper_GetDescription_Excellent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Represents a low confidence level. Positional measurements should be discarded or used only to indicate a very rough estimate of the current location..
        /// </summary>
        public static string GpsInfoHelper_GetDescription_Fair {
            get {
                return ResourceManager.GetString("GpsInfoHelper_GetDescription_Fair", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Represents a level that marks the minimum appropriate for making accurate decisions. Positional measurements could be used to make reliable in-route navigation suggestions to the user..
        /// </summary>
        public static string GpsInfoHelper_GetDescription_Good {
            get {
                return ResourceManager.GetString("GpsInfoHelper_GetDescription_Good", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Highest possible confidence level to be used for applications demanding the highest possible precision at all times..
        /// </summary>
        public static string GpsInfoHelper_GetDescription_Ideal {
            get {
                return ResourceManager.GetString("GpsInfoHelper_GetDescription_Ideal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Positional measurements could be used for calculations, but the fix quality could still be improved. A more open view of the sky is recommended..
        /// </summary>
        public static string GpsInfoHelper_GetDescription_Moderate {
            get {
                return ResourceManager.GetString("GpsInfoHelper_GetDescription_Moderate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At this level, measurements are inaccurate by as much as 300 meters with a 6-meter accurate device (50 DOP × 6 meters) and should be discarded..
        /// </summary>
        public static string GpsInfoHelper_GetDescription_Poor {
            get {
                return ResourceManager.GetString("GpsInfoHelper_GetDescription_Poor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown.
        /// </summary>
        public static string GpsInfoHelper_GetDescription_Unknown {
            get {
                return ResourceManager.GetString("GpsInfoHelper_GetDescription_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Excellent.
        /// </summary>
        public static string GpsInfoHelper_GetDisplayName_Excellent {
            get {
                return ResourceManager.GetString("GpsInfoHelper_GetDisplayName_Excellent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fair.
        /// </summary>
        public static string GpsInfoHelper_GetDisplayName_Fair {
            get {
                return ResourceManager.GetString("GpsInfoHelper_GetDisplayName_Fair", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Good.
        /// </summary>
        public static string GpsInfoHelper_GetDisplayName_Good {
            get {
                return ResourceManager.GetString("GpsInfoHelper_GetDisplayName_Good", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ideal.
        /// </summary>
        public static string GpsInfoHelper_GetDisplayName_Ideal {
            get {
                return ResourceManager.GetString("GpsInfoHelper_GetDisplayName_Ideal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Moderate.
        /// </summary>
        public static string GpsInfoHelper_GetDisplayName_Moderate {
            get {
                return ResourceManager.GetString("GpsInfoHelper_GetDisplayName_Moderate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Poor.
        /// </summary>
        public static string GpsInfoHelper_GetDisplayName_Poor {
            get {
                return ResourceManager.GetString("GpsInfoHelper_GetDisplayName_Poor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mavlink packet version v2 with MessageId=&apos;{0}&apos; not found in decoder.
        /// </summary>
        public static string MessageIdNotFoundException_MessageIdNotFoundException {
            get {
                return ResourceManager.GetString("MessageIdNotFoundException_MessageIdNotFoundException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mode is internal and cannot be set directly.
        /// </summary>
        public static string ModeClient_SetMode_Mode_is_internal_and_cannot_be_set_directly {
            get {
                return ResourceManager.GetString("ModeClient_SetMode_Mode_is_internal_and_cannot_be_set_directly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error message id type. Want {0}, Got {1}.
        /// </summary>
        public static string PacketV2_Deserialize_Error_message_id_type {
            get {
                return ResourceManager.GetString("PacketV2_Deserialize_Error_message_id_type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bad X25Crc: want {0}, got {1}.
        /// </summary>
        public static string PacketV2Helper_VerifyCrc_Bad_X25Crc {
            get {
                return ResourceManager.GetString("PacketV2Helper_VerifyCrc_Bad_X25Crc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Payload.
        /// </summary>
        public static string PayloadDiagnosticRtt_PayloadDiagnosticRtt_Payload {
            get {
                return ResourceManager.GetString("PayloadDiagnosticRtt_PayloadDiagnosticRtt_Payload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection string &apos;{0}&apos; is invalid.
        /// </summary>
        public static string RemoteStreamFactory_CreateStream_Connection_string_is_invalid {
            get {
                return ResourceManager.GetString("RemoteStreamFactory_CreateStream_Connection_string_is_invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Integer value not assigned for param &apos;{0}&apos; with type {1}.
        /// </summary>
        public static string Vehicle_ConvertToMavlinkUnionToParamValue_Integer_value_not_assigned_for_param {
            get {
                return ResourceManager.GetString("Vehicle_ConvertToMavlinkUnionToParamValue_Integer_value_not_assigned_for_param", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Author of this library doesn&apos;t know, how how to read 8 byte from float (4 byte) field.
        /// </summary>
        public static string Vehicle_ConvertToMavlinkUnionToParamValue_NeedMoreByte {
            get {
                return ResourceManager.GetString("Vehicle_ConvertToMavlinkUnionToParamValue_NeedMoreByte", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Real value not assigned for param &apos;{0}&apos; with type {1}.
        /// </summary>
        public static string Vehicle_ConvertToMavlinkUnionToParamValue_Real_value_not_assigned_for_param {
            get {
                return ResourceManager.GetString("Vehicle_ConvertToMavlinkUnionToParamValue_Real_value_not_assigned_for_param", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeout ({0} ms) to read all params from Vehicle..
        /// </summary>
        public static string Vehicle_ReadAllParams_Timeout_to_read_all_params_from_Vehicle {
            get {
                return ResourceManager.GetString("Vehicle_ReadAllParams_Timeout_to_read_all_params_from_Vehicle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Altitude of end point is null.
        /// </summary>
        public static string VehicleArdupilot_GoTo_Altitude_of_end_point_is_null {
            get {
                return ResourceManager.GetString("VehicleArdupilot_GoTo_Altitude_of_end_point_is_null", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Altitude of home position is null.
        /// </summary>
        public static string VehicleArdupilotPlane_InternalGoToGlob_Altitude_of_home_position_is_null {
            get {
                return ResourceManager.GetString("VehicleArdupilotPlane_InternalGoToGlob_Altitude_of_home_position_is_null", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeout to execute &apos;{0}&apos; (wait {1:g} time).
        /// </summary>
        public static string VehicleBase_WaitCompleteWithDefaultTimeout_Timeout_to_execute {
            get {
                return ResourceManager.GetString("VehicleBase_WaitCompleteWithDefaultTimeout_Timeout_to_execute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown STX value. Need {0}. Get {1}.
        /// </summary>
        public static string WheelKnownConstant_VerifyStx_Unknown_STX_value {
            get {
                return ResourceManager.GetString("WheelKnownConstant_VerifyStx_Unknown_STX_value", resourceCulture);
            }
        }
    }
}
